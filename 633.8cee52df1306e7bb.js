"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[633],{633:(g,i,o)=>{o.r(i),o.d(i,{HowToServiceModule:()=>p});var n=o(6895),e=o(8274),s=o(1072);let l=(()=>{class t{constructor(r,u){this.elementRef=r,this.highlightService=u,this.moduleSample="\nimport { FeatureFlagRouterModule, FeatureFlagRoutes } from 'ngx-feature-flag-router';\n\n// Initialize routes that don't require Service\nconst routes: FeatureFlagRoutes = [/*...*/];\n\n@NgModule({\n    imports: [FeatureFlagRouterModule.forChild(routes, MyService)]\n})\nexport class MyModule {}\n    ".trim(),this.implementsSample="\n@Injectable({ providedIn: 'root' })\nexport class FeatureFlagService implements FeatureFlagRoutesService {\n    // ...\n}\n        ".trim(),this.getFeatureRoutesSample="\n@Injectable({ providedIn: 'root' })\nexport class FeatureFlagService implements FeatureFlagRoutesService {\n    // Get current user id\n    private readonly userId$: Observable<number> = this.getUserId();\n\n    constructor(private readonly httpClient: HttpClient) {}\n\n    /** Set additional routes using Service */\n    getFeatureRoutes(): FeatureFlagRoutes {\n        return [\n            {\n                path: 'api-example',\n                loadChildren: () => import('api-feature-flag-off.module').then((m) => m.ApiFeatureFlagOffModule),\n                alternativeLoadChildren: () => import('api-feature-flag-on.module').then((m) => m.ApiFeatureFlagOnModule),\n                featureFlag: () => this.showFeature(),// Function that returns Observable<boolean>\n            }\n        ];\n    }\n\n    /** Determine showing feature based on user id and API response */\n    showFeature(): Observable<boolean> {\n        // Use current user id\n        return this.userId$.pipe(\n            switchMap(userId => {\n                // Make specific request for that user\n                return this.httpClient.get<UserStatus>('some/api');\n            }),\n            map(userStatus => {\n                // Check if we want to turn feature flag on or not\n                return userStatus.authorized;\n            }),\n            // Replay results until user id changes if you only want to make the api request once\n            shareReplay({ bufferSize: 1, refCount: true })\n        );\n    }\n}\n".trim()}ngAfterViewInit(){this.highlightService.highlight(this.elementRef.nativeElement)}}return t.\u0275fac=function(r){return new(r||t)(e.Y36(e.SBq),e.Y36(s.l))},t.\u0275cmp=e.Xpm({type:t,selectors:[["demo-how-to-service"]],decls:31,vars:3,consts:[[1,"max-large-content-width"],[1,"inline-highlight","language-typescript"],[1,"language-typescript"]],template:function(r,u){1&r&&(e.TgZ(0,"div",0)(1,"h1"),e._uU(2,"How to Use Service / API"),e.qZA(),e.TgZ(3,"p"),e._uU(4," 1. Add your Service ( "),e.TgZ(5,"code",1),e._uU(6,"MyService"),e.qZA(),e._uU(7," ) as the second argument of "),e.TgZ(8,"code",1),e._uU(9,"FeatureFlagRouterModule.forChild()"),e.qZA()(),e.TgZ(10,"pre")(11,"code",2),e._uU(12),e.qZA()(),e.TgZ(13,"p"),e._uU(14," 2. Add "),e.TgZ(15,"code",1),e._uU(16,"implements FeatureFlagRoutesService"),e.qZA(),e._uU(17," to your Service. "),e.qZA(),e.TgZ(18,"pre")(19,"code",2),e._uU(20),e.qZA()(),e.TgZ(21,"p"),e._uU(22," 3. Add "),e.TgZ(23,"code",1),e._uU(24,"getFeatureRoutes()"),e.qZA(),e._uU(25," method and return your "),e.TgZ(26,"code",1),e._uU(27,"FeatureFlagRoutes"),e.qZA()(),e.TgZ(28,"pre")(29,"code",2),e._uU(30),e.qZA()()()),2&r&&(e.xp6(12),e.Oqu(u.moduleSample),e.xp6(8),e.Oqu(u.implementsSample),e.xp6(10),e.Oqu(u.getFeatureRoutesSample))},styles:["[_nghost-%COMP%]{min-height:100vh;width:100%;padding:8px;background:#6200b5;color:#eee;border-color:#eee;display:flex;flex-direction:column;justify-content:center}"]}),t})();var c=o(9351);const d=[{path:"",component:l}];let p=(()=>{class t{}return t.\u0275fac=function(r){return new(r||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[n.ez,c.Bz.forChild(d)]}),t})()}}]);